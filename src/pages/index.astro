---
import Layout from "../layouts/Layout.astro";
---

<Layout>
    <h1>Astro</h1>
    <a onclick="startLocalNetworkSenderConnection()">host connection</a>
    <br />
    <a onclick="startLocalNetworkReceiverConnection()">receive connection</a>
    <input id="offerSDP" type="text" />
    <br />
    <input id="answerSDP" type="text" />
    <a onclick="completeLocalNetworkConnection()">accept answer</a>
    <br />
    <input id="localMessage" type="text" />
    <a onclick="sendMessageLocalNetwork()">send message</a>

    <script>
        import {
            initialiseConnection,
            sendMessageLocalNetwork,
        } from "../../utils/client/connections/local/connection";
        import { startLocalNetworkReceiverConnection } from "../../utils/client/connections/local/receiver";
        import {
            startLocalNetworkSenderConnection,
            completeLocalNetworkConnection,
        } from "../../utils/client/connections/local/sender";
        import { MessageType } from "../../utils/client/connections/shared/types";

        declare global {
            interface Window {
                startLocalNetworkSenderConnection: () => void;
                startLocalNetworkReceiverConnection: () => void;
                completeLocalNetworkConnection: () => void;
                sendMessageLocalNetwork: (document?: Document) => void;
            }
        }

        const peerConnection = await initialiseConnection();

        window.startLocalNetworkSenderConnection = () => {
            startLocalNetworkSenderConnection(peerConnection);
        };

        window.startLocalNetworkReceiverConnection = () => {
            const offerSDP = (
                document?.getElementById("offerSDP") as HTMLInputElement | null
            )?.value;
            if (!offerSDP) return;

            startLocalNetworkReceiverConnection(peerConnection, offerSDP);
        };

        window.completeLocalNetworkConnection = () => {
            const answerSDP = (
                document?.getElementById("answerSDP") as HTMLInputElement | null
            )?.value;
            if (!answerSDP) return;

            completeLocalNetworkConnection(peerConnection, answerSDP);
        };

        window.sendMessageLocalNetwork = () => {
            const message = (
                document?.getElementById(
                    "localMessage",
                ) as HTMLInputElement | null
            )?.value;
            if (!message) return;

            sendMessageLocalNetwork(MessageType.TEXT, message);
        };
    </script>
</Layout>
